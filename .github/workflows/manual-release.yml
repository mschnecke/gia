name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        type: string
      release_notes:
        description: 'Release notes (optional)'
        required: false
        type: string
        default: 'Manual release'

permissions:
  contents: write

jobs:
  create-release:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Rust
      uses: actions-rust-lang/setup-rust-toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-msvc
    
    - name: Build Windows Release
      run: cargo build --release --target x86_64-pc-windows-msvc
    
    - name: Generate Changelog
      id: changelog
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Get the previous release tag
        $PREV_TAG = gh release list --limit 1 --json tagName --jq '.[0].tagName' 2>$null
        if ($PREV_TAG) {
          $CHANGELOG = gh api repos/:owner/:repo/compare/$PREV_TAG...HEAD --jq '.commits[] | "- " + .commit.message' | Out-String
        } else {
          $CHANGELOG = git log --oneline --pretty=format:"- %s" | Out-String
        }
        echo "changelog<<EOF" >> $env:GITHUB_OUTPUT
        echo $CHANGELOG >> $env:GITHUB_OUTPUT
        echo "EOF" >> $env:GITHUB_OUTPUT
    
    - name: Create Release and Upload Asset
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        $NOTES = "${{ github.event.inputs.release_notes }}"
        if ("${{ steps.changelog.outputs.changelog }}".Trim() -ne "") {
          $NOTES = $NOTES + "`n`n## Changelog`n${{ steps.changelog.outputs.changelog }}"
        }
        
        # Add Full Changelog link
        $PREV_TAG = gh release list --limit 1 --json tagName --jq '.[0].tagName' 2>$null
        if ($PREV_TAG) {
          $NOTES = $NOTES + "`n`n**Full Changelog**: https://github.com/${{ github.repository }}/compare/$PREV_TAG...${{ github.event.inputs.version }}"
        }
        
        gh release create "${{ github.event.inputs.version }}" `
          --title "Release ${{ github.event.inputs.version }}" `
          --notes $NOTES `
          target/x86_64-pc-windows-msvc/release/gia.exe